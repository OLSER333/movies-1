Сделать moviesApp

Как должно работать:"
Searched - ставлю НОВЫЙ рейтинг (он сразу остаётся + ) --> turn: appear in Rated +
Searched - ОБНОВЛЯЮ рейтинг (он сразу остаётся + ) --> turn: appear in Rated (-)

Rated - УДАЛЯЮ из рейт (пока что остаётся + ) --> turn: deleted in Search&Rated (-)
Rated - ОБНОВЛЯЮ рейтинг (он сразу остаётся + ) --> turn: changed in Search (-)

Похоже у меня не обновляются rate, надо передать их вместе с пропсами при обновлении списка(!))

Проблема в том, что обновляется дважды хз что делать...

написать обработку 500+ страницы error..
разобраться с контекстом и избавиться от кучи аргументов?)

Ещё вариант - хранить в App копию localStorage - если
они не равны, то обновлять Rated, и соответственно в обратном порядке - обновлять

Правильно ли вставил key ?? в App

может быть полезно:
    const filmTitle = item.title || 'Movie title not specified';
    const overview = item.overview || 'Movie overview not specified';

Вопрос о localStorage -
Записывать данные в local. Есть 2 пути:
    1) toADD: сразу setItem(id, rate)
        а потом рендерить через {items} pushed через for(i = 0;;)
    2) toADD:  getItem(arrRatedMovies), JSON.parse, push new, JSON.stringify.
        но тогда getItem, parse, и делаем через родной map. Что быстрее?
App
    Tabs
        <TabsItem>
          //diff
            {needSearch && Input ...}
          //same
            {!movies && Spin}
            <ul.moviesList>
                movies.map(el => {
                    <Card>
                      onKeyDown(onChange)={() => onAdd(orChange)ToLocalStorage(id, Rate)
                    </Card>
                }

            </ul>
        <TabsItem/>

            {!movies && Spin}
            <ul.moviesList>
                ЦИКЛ FOR по LocStor.length
                    <Card>
                      onKeyDown(onChange)={() => onAdd(orChange)ToLocalStorage(id, Rate)
                    </Card>
                }
                pagination - разная логика. Там запрос, а тут надо брать прямо из local по 20 штук
            </ul>

        <TabsItem>


        <TabsItem/>






















